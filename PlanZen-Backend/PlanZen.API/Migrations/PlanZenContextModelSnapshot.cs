// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlanZen.API.DbContexts;

#nullable disable

namespace PlanZen.API.Migrations
{
    [DbContext(typeof(PlanZenContext))]
    partial class PlanZenContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PlanZen.API.Entities.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ColumnId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset?>("DueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("ColumnId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColumnId = 1,
                            CreatedDate = new DateTimeOffset(new DateTime(2023, 8, 24, 14, 28, 55, 204, DateTimeKind.Unspecified).AddTicks(5867), new TimeSpan(0, 2, 0, 0, 0)),
                            Description = "Implement... Implement everything",
                            Title = "Implement Project"
                        },
                        new
                        {
                            Id = 2,
                            ColumnId = 2,
                            CreatedDate = new DateTimeOffset(new DateTime(2023, 8, 24, 14, 28, 55, 204, DateTimeKind.Unspecified).AddTicks(5915), new TimeSpan(0, 2, 0, 0, 0)),
                            Title = "Plan Project"
                        });
                });

            modelBuilder.Entity("PlanZen.API.Entities.Column", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("Columns");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TableId = 1,
                            Title = "ToDo"
                        },
                        new
                        {
                            Id = 2,
                            TableId = 1,
                            Title = "InProgress"
                        },
                        new
                        {
                            Id = 3,
                            TableId = 2,
                            Title = "Todos"
                        },
                        new
                        {
                            Id = 4,
                            TableId = 2,
                            Title = "Done"
                        });
                });

            modelBuilder.Entity("PlanZen.API.Entities.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Pet Project"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Todos"
                        });
                });

            modelBuilder.Entity("PlanZen.API.Entities.Card", b =>
                {
                    b.HasOne("PlanZen.API.Entities.Column", "Column")
                        .WithMany("Cards")
                        .HasForeignKey("ColumnId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Column");
                });

            modelBuilder.Entity("PlanZen.API.Entities.Column", b =>
                {
                    b.HasOne("PlanZen.API.Entities.Table", "Table")
                        .WithMany("Columns")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("PlanZen.API.Entities.Column", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("PlanZen.API.Entities.Table", b =>
                {
                    b.Navigation("Columns");
                });
#pragma warning restore 612, 618
        }
    }
}
